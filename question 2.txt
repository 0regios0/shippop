Normalization
การ design ประเภทนี้จะทำให้ลดความซ้ำซ้อนของข้อมูลในฐานข้อมูลเป็นวิธีการกำหนดและปรับปรุงแอตทริบิวต์ให้แต่ล่ะเอนทิตี้ที่ทำให้เกิดโคงสร้างตารางที่ลดความซ้ำซ้อนของข้อมูลที่ดำเนินการอย่างเป็นลำดับ
โดยประกอบด้วยฟอร์มต่างๆดังนี้
นอมอลฟอร์มที่ 1 ในตารางจะไม่มีค่าของของมูลที่ซ้ำซ้อนกัน แต่มีข้อเสียคือการอัพเดตข้อมูลต้องมีการแก้ไขหลายตารางหรือการลบข้อมูลอาจทำให้ขอ้มูลที่เชื่อมอยู่กับตารางอื่นหายไปด้วยการเพิ่มข้อมูลก็อาจขัดแย้งกับข้อมูลเดิม
นอมอลฟอร์มที่ 2 จะคล้ายกับนอมอลฟอร์มที่ 1 แต่จะแตกต่างที่แอตทริบิวต์บางส่วนที่ขึ้นก็ไพมารี่คีย์หลัก
นอมอลฟอร์มที่ 3 รีเลชันจะอยู่ในรูปบอยซ์คอดด์นอร์มัลฟอร์ม ถ้าทุกแอตทริบิวต์ขึ้นอยู่กับแคนดิเดตคีย์ดังนั้นถ้าใน 1 รีเลชันมีแคนดิเดตคีย์เพียงตัวเดียวแล้วนอร์มัลฟอร์มที่ 3 และบอยซ์คอดด์นอร์มัลฟอร์ม จะเหมือนกัน 
	 โอกาสที่คุณสมบัติของบอยซ์คอดด์นอมอลฟอร์มจะถูกละเมิดนั้น เกิดขึ้นได้น้อย และจะเกิดได้กับรีเลชันที่มีแคนดิเดตคีย์มากกว่าหนึ่งเท่านั้น
นอมอลฟอร์มที่ 4 โดยสามารถแตกออกเป็นกลุ่มตารางข้อมูลอิสระได้มากขึ้น
นอมอลฟอร์มที่ 5 จะพิจารณาถึงการขึ้นต่อกันของข้อมูลในการแยกข้อมูลในรีเลชันออกเป็นรีเลชันย่อย และประกอบรีเลชันย่อยกลับเป็นรีเลชันใหญ่เช่นเดิม ซึ่งเป็นการตรวจสอบว่าเมื่อรวมกันใหม่ด้วยวิธีการจอยน์
	   แล้ว จะได้รีเลชันกลับมาเหมือนเดิมทุกประการหรือไม่

กล่าวโดยสรุป การใช้ design ประเภทนี้จะช่ายลดความซ้ำซ้อนของข้อมูลแต่จะทำให้เกิดผลเสียคือขนาดของข้อมูลมีขนาดใหญ่และจะทำให้เกิดการล่าช้าภายในฐานข้อมูลหากเกิดความล่าช้าอาจต้องแก้ปัญหาด้วยการ
ระดับของฟอร์มลงเพื่อเพิ่มความเร็วให้แก่ระบบ